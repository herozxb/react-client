{"ast":null,"code":"import _slicedToArray from \"/Users/empzxb/Documents/webApp/app/react-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/empzxb/Documents/webApp/app/react-client/src/pages/Home.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Grid, Transition, Dropdown, Divider, Header, Icon } from 'semantic-ui-react';\nimport { AuthContext } from '../context/auth';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { FETCH_POSTS_QUERY, FETCH_AREA_QUERY } from '../util/graphql';\n\nfunction Home() {\n  const options = [{\n    key: '1',\n    text: 'Self improvement',\n    value: 'Self_improvement'\n  }, {\n    key: '2',\n    text: 'Relationship',\n    value: 'Relationship'\n  }, {\n    key: '3',\n    text: 'Wolrd relation',\n    value: 'Wolrd'\n  }, {\n    key: '4',\n    text: 'Health',\n    value: 'Health'\n  }, {\n    key: '5',\n    text: 'Success',\n    value: 'Success'\n  }, {\n    key: '6',\n    text: 'Dream',\n    value: 'Dream'\n  }, {\n    key: '7',\n    text: 'Change the world',\n    value: 'Change_the_world'\n  }, {\n    key: '8',\n    text: 'Brave to do',\n    value: 'Brave_to_do'\n  }, {\n    key: '9',\n    text: 'Innovative Ideas',\n    value: 'Innovative Ideas'\n  }, {\n    key: '10',\n    text: 'Job',\n    value: 'Job'\n  }, {\n    key: '11',\n    text: 'Company',\n    value: 'Company'\n  }, {\n    key: '12',\n    text: 'do',\n    value: 'do'\n  }, {\n    key: '13',\n    text: 'Time',\n    value: 'Time'\n  }, {\n    key: '14',\n    text: 'Pain',\n    value: 'Pain'\n  }, {\n    key: '15',\n    text: 'Wealth',\n    value: 'Wealth'\n  }, {\n    key: '16',\n    text: 'Speak',\n    value: 'Speak'\n  }, {\n    key: '17',\n    text: 'Family',\n    value: 'Family'\n  }, {\n    key: '18',\n    text: 'Young',\n    value: 'Young'\n  }, {\n    key: '19',\n    text: 'Danger thought',\n    value: 'Danger_thought'\n  }, {\n    key: '20',\n    text: 'Excuse',\n    value: 'Excuse'\n  }, {\n    key: '21',\n    text: 'good or evil',\n    value: 'good_or_evil'\n  }, {\n    key: '22',\n    text: 'Enemy',\n    value: 'Enemy'\n  }, {\n    key: '23',\n    text: 'Justice',\n    value: 'Justice'\n  }, {\n    key: '24',\n    text: 'Memory',\n    value: 'Memory'\n  }, {\n    key: '25',\n    text: 'Today',\n    value: 'Today'\n  }, {\n    key: '26',\n    text: 'Plan',\n    value: 'Plan'\n  }, {\n    key: '27',\n    text: 'Revolution',\n    value: 'Revolution'\n  }];\n\n  const _useContext = useContext(AuthContext),\n        user = _useContext.user; //////////////////////////////////////////////////////////\n  //Thought Area\n\n\n  const _useState = useState(\"Self_improvement\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        areaValues = _useState2[0],\n        setAreaValues = _useState2[1];\n\n  console.log(\"====areaValues====\");\n  console.log(areaValues);\n\n  const on_change_for_thought_area = (e, {\n    value\n  }) => {\n    //console.log(value);\n    setAreaValues(value);\n  };\n  /*\n  const {\n    loading,\n    data: { getPosts: posts } \n  } = useQuery(FETCH_POSTS_QUERY);\n  //*/\n\n\n  let thoughtArea = \"Self_improvement\";\n  console.log(thoughtArea);\n\n  const _useQuery = useQuery(FETCH_AREA_QUERY, {\n    variables: {\n      thoughtArea: areaValues\n    }\n  }),\n        loading = _useQuery.loading,\n        posts = _useQuery.data.getAreaPosts;\n\n  return React.createElement(Grid, {\n    columns: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"search\",\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), \"Search the Thought\"))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    options: options,\n    placeholder: \"Search the Thought\",\n    search: true,\n    fluid: true,\n    selection: true,\n    allowAdditions: true,\n    scrolling: true,\n    value: areaValues,\n    onAddItem: null,\n    onChange: on_change_for_thought_area,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }))), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, user && React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(PostForm, {\n    area: areaValues,\n    onAreaChange: setAreaValues,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), loading ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"loading...\") : React.createElement(Transition.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"New Post\"))), posts && posts.map(post => React.createElement(Grid.Column, {\n    key: post.id,\n    style: {\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(PostCard, {\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }))))));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/empzxb/Documents/webApp/app/react-client/src/pages/Home.js"],"names":["React","useContext","useState","useEffect","useQuery","Grid","Transition","Dropdown","Divider","Header","Icon","AuthContext","PostCard","PostForm","FETCH_POSTS_QUERY","FETCH_AREA_QUERY","Home","options","key","text","value","user","areaValues","setAreaValues","console","log","on_change_for_thought_area","e","thoughtArea","variables","loading","posts","data","getAreaPosts","map","post","id","marginBottom"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect} from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Grid, Transition,Dropdown, Divider, Header, Icon } from 'semantic-ui-react';\n\nimport { AuthContext } from '../context/auth';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { FETCH_POSTS_QUERY, FETCH_AREA_QUERY } from '../util/graphql';\n\n\nfunction Home() {\n\nconst options = [\n  { key: '1', text: 'Self improvement', value: 'Self_improvement' },\n  { key: '2', text: 'Relationship', value: 'Relationship' },\n  { key: '3', text: 'Wolrd relation', value: 'Wolrd' },\n  { key: '4', text: 'Health', value: 'Health' },\n  { key: '5', text: 'Success', value: 'Success' },\n  { key: '6', text: 'Dream', value: 'Dream' },\n  { key: '7', text: 'Change the world', value: 'Change_the_world' },\n  { key: '8', text: 'Brave to do', value: 'Brave_to_do' },\n  { key: '9', text: 'Innovative Ideas', value: 'Innovative Ideas' },\n  { key: '10', text: 'Job', value: 'Job' },\n  { key: '11', text: 'Company', value: 'Company' },\n  { key: '12', text: 'do', value: 'do' },\n  { key: '13', text: 'Time', value: 'Time' },\n  { key: '14', text: 'Pain', value: 'Pain' },\n  { key: '15', text: 'Wealth', value: 'Wealth' },\n  { key: '16', text: 'Speak', value: 'Speak' },\n  { key: '17', text: 'Family', value: 'Family' },\n  { key: '18', text: 'Young', value: 'Young' },\n  { key: '19', text: 'Danger thought', value: 'Danger_thought' },\n  { key: '20', text: 'Excuse', value: 'Excuse' },\n  { key: '21', text: 'good or evil', value: 'good_or_evil' },\n  { key: '22', text: 'Enemy', value: 'Enemy' },\n  { key: '23', text: 'Justice', value: 'Justice' },\n  { key: '24', text: 'Memory', value: 'Memory' },\n  { key: '25', text: 'Today', value: 'Today' },\n  { key: '26', text: 'Plan', value: 'Plan' },\n  { key: '27', text: 'Revolution', value: 'Revolution' },\n]\n\n\n\n  const { user } = useContext(AuthContext);\n\n  //////////////////////////////////////////////////////////\n  //Thought Area\n  const [areaValues,setAreaValues] = useState(\"Self_improvement\");\n  console.log(\"====areaValues====\");\n  console.log(areaValues);\n  const on_change_for_thought_area = (e, { value }) => \n  {\n    //console.log(value);\n    setAreaValues(value)\n  };\n\n  /*\n  const {\n    loading,\n    data: { getPosts: posts } \n  } = useQuery(FETCH_POSTS_QUERY);\n  //*/\n\n  let thoughtArea = \"Self_improvement\";\n  console.log(thoughtArea);\n  const {\n    loading,\n    data: { getAreaPosts: posts } \n  } = useQuery(FETCH_AREA_QUERY,\n    {\n      variables: {\n        thoughtArea : areaValues\n    },\n  }\n  );\n\n  return (\n    <Grid columns={1}>\n        <Grid.Row>\n          <Grid.Column>\n            <Divider horizontal>\n              <Header as='h3'>\n                <Icon name='search' color=\"blue\"/>\n                  Search the Thought\n              </Header>\n            </Divider>\n          </Grid.Column>\n        <Grid.Column>\n          <Dropdown\n            options={options}\n            placeholder='Search the Thought'\n            search\n            fluid\n            selection\n            allowAdditions\n            scrolling\n            value={areaValues}\n            onAddItem={null}\n            onChange={on_change_for_thought_area}\n          />\n          </Grid.Column>\n        </Grid.Row>\n      <Grid.Row>\n        {user && (\n          <Grid.Column>\n            <PostForm area={areaValues} onAreaChange={setAreaValues} />\n          </Grid.Column>\n        )}\n        {loading ? (\n          <h1>loading...</h1>\n        ) : (\n          <Transition.Group>\n            <Grid.Column>\n              <Divider horizontal><h3>New Post</h3></Divider>\n            </Grid.Column>\n            {posts &&\n              posts.map((post) => (\n                <Grid.Column key={post.id} style={{ marginBottom: 20 }}>\n                  <PostCard post={post} />\n                </Grid.Column>\n              ))}\n          </Transition.Group>\n        )}\n      </Grid.Row>\n    </Grid>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}